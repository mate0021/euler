/*
Each new term in the Fibonacci sequence is generated by adding the previous two terms.
By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four
million, find the sum of the even-valued terms.
 */
public class Main {

    public static void main(String[] args) {
        System.out.println("Sum: " + sumEvenFiboUpTo(40));
    }

    static int sumEvenFiboUpTo(int value) {
        int result = 0;
        int[] fibos = initEvenFiboSequence(value);

        for (int i = 0; i < fibos.length; i++) {
            System.out.println(fibos[i]);
            result += fibos[i];
        }

        return result;
    }

    private static int[] initEvenFiboSequence(int range) {
        int[] fibos = new int[range];
        for (int i = 0; i < range; i++) {
            int f = fib(i);
            if (f >= 4000000) {
                break;
            }
            if (f % 2 == 0) {
                fibos[i] = f;
            }
        }

        return fibos;
    }

    private static int fib(int n) {
        if (n == 0 || n == 1) {
            return 1;
        }

        return fib (n - 2) + fib(n - 1);
    }
}
